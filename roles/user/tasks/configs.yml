- name: config rc files
  copy:
    src: home/
    dest: "{{ item.home }}"
  with_items: "{{ users.values() }}"

- name: config user-dir
  file:
    path: "{{ item.home }}"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"

- name: config ssh-dir
  file:
    path: "{{ item.home }}/.ssh/"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"


- name: config .private dir
  file:
    path: "{{ item.home }}/.private/"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"

- name: config .config dir
  file:
    path: "{{ item.home }}/.config/"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"

- name: config .config/systemd dir
  file:
    path: "{{ item.home }}/.config/systemd/"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"

- name: config .config/systemd/user dir
  file:
    path: "{{ item.home }}/.config/systemd/user/"
    state: directory
    owner: "{{ item.user }}"
    mode: '0700'
  with_items: "{{ users.values() }}"

- name: config .cache mount
  copy:
    content: |
      [Unit]
      Description=Mount tmpfs to /home/{{ item.user }}/.cache

      [Mount]
      Where=/home/{{ item.user }}/.cache
      Options=defaults,noatime,nodiratime,nosuid,nodev,mode=1777
      What=tmpfs
      Type=tmpfs

      [Install]
      WantedBy=multi-user.target
    dest: "/etc/systemd/system/home-{{ item.user }}-.cache.mount"
    owner: "root"
  with_items: "{{ users.values() }}"
  when: item.user != 'root' and ansible_virtualization_type != 'docker'

- name: config .cache mount enable systemd
  systemd:
    name: "home-{{ item.user }}-.cache.mount"
    state: started
    enabled: yes
    daemon_reload: yes
  with_items: "{{ users.values() }}"
  when: item.user != 'root' and ansible_virtualization_type != 'docker'

- name: config .private dir for user
  file:
    name: "{{ item.home }}/.private"
    owner: "{{ item.user }}"
    mode: '0700'
    state: directory
  when: "'custom_secrets' in item"
  with_items: "{{ users.values() }}"

- name: config custom secret
  template:
    src: custom_secret.j2
    dest: "{{ item.0.home }}/.private/{{ item.1.filename }}"
    owner: "{{ item.0.user }}"
    mode: '0600'
  with_subelements:
    - "{{ users.values() }}"
    - custom_secrets
    - skip_missing: True
